name: Pull Request Check

on:
  pull_request:
    branches-ignore:
      - 'docs/**'

jobs:
  backend:
    name: Backend Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      - name: Instalar Poetry
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Instalar dependências
        working-directory: backend
        run: |
          poetry install

      - name: Lint
        working-directory: backend
        run: |
          poetry run ruff check

      - name: Tests
        working-directory: backend
        run: |
          poetry run pytest --cov=src --cov-report=xml

      - name: Upload cobertura
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage.xml

  frontend:
    name: Frontend Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Instalar dependências
        working-directory: frontend
        run: |
          npm ci

      - name: Lint
        working-directory: frontend
        run: |
          npm run lint

  sonarcloud-backend:
    name: SonarCloud Backend
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: backend-coverage

      - name: Análise SonarCloud Backend
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}

  sonarcloud-frontend:
    name: SonarCloud Frontend
    runs-on: ubuntu-latest
    needs: frontend

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Análise SonarCloud Frontend
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
