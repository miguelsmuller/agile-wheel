name: Manual Workflow

on:
  workflow_dispatch:

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      - name: Instalar Poetry
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Instalar dependências do projeto
        working-directory: backend
        run: |
          poetry install

      - name: Executar testes
        working-directory: backend
        run: |
          poetry run pytest --cov=src --cov-report=term --cov-report=html

      - name: Preparar cobertura para o SonarCloud
        working-directory: backend
        run: |
          poetry run coverage xml -o coverage.xml

      - name: Salvar cobertura como artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/coverage.xml

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout código
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Baixar cobertura do job anterior
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: SonarCloud - Backend
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}

      - name: SonarCloud - Frontend
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}