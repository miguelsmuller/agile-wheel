services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - INTERNAL_PORT=${INTERNAL_BACKEND_PORT:-8000}
    ports:
      - "3333:${INTERNAL_BACKEND_PORT:-8000}"
    depends_on:
      - mongo
    volumes:
      - ./backend/src:/app/src
      - ./backend/pyproject.toml:/app/pyproject.toml
      - ./backend/poetry.lock:/app/poetry.lock
    command: uvicorn src.main:app --host 0.0.0.0 --port ${INTERNAL_BACKEND_PORT:-8000} --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./frontend/.env
    environment:
      - INTERNAL_PORT=${INTERNAL_FRONTEND_PORT:-80}
    ports:
      - "4444:${INTERNAL_FRONTEND_PORT:-80}"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
    command: npm run start -- --port=${INTERNAL_FRONTEND_PORT:-80} --host=0.0.0.0

  mongo:
    image: mongo:8.0.8
    ports:
      - "27017:${INTERNAL_DB_PORT:-27017}"
    volumes:
      - mongo-data:/data/db

  docs:
    image: squidfunk/mkdocs-material:9.5.10
    ports:
      - "8009:${INTERNAL_DOCS_PORT:-8000}"
    volumes:
      - .:/app
      - ./mkdocs.yml:/app/mkdocs.yml
    working_dir: /app
    command: serve -a 0.0.0.0:${INTERNAL_DOCS_PORT:-8000}

volumes:
  mongo-data:
  frontend-node-modules:
